name: Deployment Workflow

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      IMAGE_TAG:
        description: "Tag of the image to be pushed to AWS ECR"
        required: true
        type: string

env:
  image_tag: ${{ github.event.release.tag_name || inputs.IMAGE_TAG }}

jobs:
  terraform-apply:
    environment: deploy-aws
    runs-on: ubuntu-latest
    name: Terraform apply
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          aws-region: eu-central-1

      - name: terraform apply
        uses: dflook/terraform-apply@v1
        with:
          path: terraform
          backend_config: |
            bucket=${{ secrets.AWS_TF_STATE_BUCKET }}
            key=${{ secrets.AWS_TF_STATE_OBJECT_KEY }}
            region=${{ env.AWS_REGION }}
            encrypt=true
          variables: |
            image_tag=${{ env.image_tag }}
          auto_approve: true

  build-push-image:
    name: Build and push image to AWS ECR
    runs-on: ubuntu-latest
    environment:
      name: deploy-aws
      url: chatrrr.chiemerie.com
    permissions:
      id-token: write
      contents: read
    needs: terraform-apply
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get Terraform outputs
        uses: dflook/terraform-output@v1
        id: tf-outputs
        with:
          path: terraform

      - name: Build, tag and push app image to ecr
        uses: ./.github/actions/build-push-image
        with:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.tf-outputs.outputs.app_repository_name }}
          IMAGE_TAG: ${{ env.image_tag }}
          DOCKERFILE_PATH: ./Dockerfile.prod
          DOCKER_BUILD_CONTEXT: .

      - name: Build, tag and push nginx image to ecr
        uses: ./.github/actions/build-push-image
        with:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.tf-outputs.outputs.nginx_repository_name }}
          IMAGE_TAG: latest
          DOCKERFILE_PATH: ./nginx/Dockerfile
          DOCKER_BUILD_CONTEXT: ./nginx

      - name: Logout from Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
