name: Provision AWS ECR, build and push image to AWS ECR

on:
  pull_request:
    branches:
      - master
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      IMAGE_TAG:
        description: "Tag of the image to be pushed to AWS ECR"
        required: true
        type: string

jobs:
  provision-aws-ecr:
    name: Provision AWS ECR with terraform
    uses: ./.github/workflows/terraform-workflow.yml
    with:
      AWS_REGION: eu-central-1
      TERRAFORM_ROOT_PATH: ./.github/terraform-ecr/
      ENVIRONMENT: create-ecr-repository
    secrets: inherit

  build-push-image:
    name: Build and push image to AWS ECR
    runs-on: ubuntu-latest
    environment: push-images-ecr
    permissions:
      id-token: write
      contents: read
    needs: provision-aws-ecr
    env:
      AWS_REGION: eu-central-1
      APP_IMAGE_TAG: ${{ github.event.release.tag_name || github.event.pull_request.head.sha || inputs.IMAGE_TAG }}
    outputs:
      image_tag: ${{ steps.set-image-tag-output.outputs.image_tag }}

    steps:
      - name: set image_tag output
        id: set-image-tag-output
        run: |
          echo "::set-output name=image_tag::${{ env.APP_IMAGE_TAG }}"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set terraform output
        id: set-terraform-output
        run: |
          echo ${{ needs.provision-aws-ecr.outputs.terraform_output }} > terraform_output && \
          echo "::set-output name=ecr_app_repository::$(cat terraform_output | jq -r .app_repository_name.value)" && \
          echo "::set-output name=ecr_nginx_repository::$(cat terraform_output | jq -r .nginx_repository_name.value)"

      - name: Build, tag and push app image to ecr
        uses: ./.github/actions/build-push-image
        with:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.set-terraform-output.outputs.ecr_app_repository }}
          IMAGE_TAG: ${{ env.APP_IMAGE_TAG }}
          DOCKERFILE_PATH: ./Dockerfile.prod
          DOCKER_BUILD_CONTEXT: .

      - name: Build, tag and push nginx image to ecr
        uses: ./.github/actions/build-push-image
        with:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.set-terraform-output.outputs.ecr_nginx_repository }}
          IMAGE_TAG: latest
          DOCKERFILE_PATH: ./nginx/Dockerfile
          DOCKER_BUILD_CONTEXT: ./nginx

      - name: Logout from Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

  provision-aws-ecs:
    name: Provision AWS ECS with terraform
    uses: ./.github/workflows/terraform-workflow.yml
    needs: build-push-image
    with:
      AWS_REGION: eu-central-1
      TERRAFORM_ROOT_PATH: ./terraform/
      APP_IMAGE_TAG: ${{ needs.build-push-image.outputs.image_tag }}
      ENVIRONMENT: deploy-aws
    secrets: inherit
